# ==============================================================================
# PLANTILLA DE CONFIGURACIÓN - PLUM VIAJES
# ==============================================================================
# 
# Este archivo sirve como plantilla para configurar las variables de entorno.
# Copia este archivo como .env y completa los valores reales.
#

# --- URLs de la Aplicación ---
NEXT_PUBLIC_URL=http://localhost:3000
NEXT_PUBLIC_SITE_URL="https://tu-dominio.com"
NEXT_PUBLIC_BACKEND_URL="https://tu-dominio.com"
SANITY_STUDIO_URL=http://localhost:3000
SANITY_STUDIO_NEXT_BACKEND="https://tu-dominio.com"

# --- API Keys Internas ---
# Clave principal para uso interno del proyecto
NEXT_PUBLIC_API_KEY=tu_api_key_interna_aqui

# Clave para Sanity Studio
SANITY_STUDIO_NEXT_API_KEY=tu_sanity_api_key_aqui
SANITY_API_KEY=tu_sanity_api_key_aqui

# --- API Keys Externas (Para Proveedores Externos) ---
# Formato: EXTERNAL_API_KEY_[NOMBRE_PROVEEDOR]=sk_clave_segura
# Genera las claves con: node -e "console.log('sk_' + require('crypto').randomBytes(32).toString('hex'))"

# Ejemplo para partners:
EXTERNAL_API_KEY_PLUM_PARTNERS=sk_partner_clave_generada_aqui

# Agrega aquí nuevas API keys para proveedores externos:
# EXTERNAL_API_KEY_BOOKING_PARTNER=sk_booking_nueva_clave_aqui
# EXTERNAL_API_KEY_TRAVEL_AGENCY=sk_agency_nueva_clave_aqui
# EXTERNAL_API_KEY_INTEGRATION_SERVICE=sk_integration_nueva_clave_aqui

# --- API Security ---
JWT_SECRET=tu-jwt-secret-minimo-32-caracteres-aqui
API_KEYS=plum-web-client,plum-sanity-studio,plum-mobile-app

# --- Sanity CMS ---
NEXT_PUBLIC_SANITY_PROJECT_ID=tu_project_id
NEXT_PUBLIC_SANITY_DATASET=production
NEXT_PUBLIC_SANITY_API_VERSION=2024-07-15
SANITY_STUDIO_AUTH_TOKEN=tu_sanity_auth_token_aqui
NEXT_PUBLIC_SANITY_AUTH_TOKEN=tu_sanity_auth_token_aqui

# --- Redis Database ---
UPSTASH_REDIS_REST_URL=https://tu-redis-url.upstash.io
UPSTASH_REDIS_REST_TOKEN=tu_redis_token_aqui
REDIS_URL="redis://tu-url-redis-aqui"

# --- Servicios Externos ---
# reCAPTCHA
NEXT_PUBLIC_RECAPTCHA_KEY=tu_recaptcha_key_aqui

# Stripe
NEXT_PUBLIC_STRIPE_KEY=pk_test_tu_stripe_key_aqui

# MongoDB
NEXT_PUBLIC_MONGO_SRV=mongodb+srv://usuario:password@cluster.mongodb.net/database

# Resend (Email)
NEXT_PUBLIC_RESEND_API_KEY=re_tu_resend_key_aqui

# --- Configuración de Aplicación ---
# Modo mantenimiento (descomenta y ajusta si es necesario)
# NEXT_PUBLIC_MAINTENANCE_MODE=false

# --- Proveedores de Viajes ---
# Julia Tours
JULIA_TOURS_URL=http://ycixweb.juliatours.com.ar/WSJULIADEMO/WSJULIA.asmx
JULIA_TOURS_USER=tu_usuario_julia
JULIA_TOURS_PASSWORD=tu_password_julia
JULIA_TOURS_AGENCY_ID=tu_agency_id

# OLA (Online Travel Agency)
OLA_URL=https://tu-url-ola.com.ar/endpoint?wsdl
OLA_USERNAME=tu_usuario_ola
OLA_UI_PASSWORD=tu_password_ola
OLA_API_KEY=tu_ola_api_key

# OLA para Sanity Studio
SANITY_STUDIO_OLA_URL=https://tu-url-ola.com.ar/endpoint?wsdl
SANITY_STUDIO_OLA_USERNAME=tu_usuario_ola
SANITY_STUDIO_OLA_UI_PASSWORD=tu_password_ola
SANITY_STUDIO_OLA_API_KEY=tu_ola_api_key

# ==============================================================================
# INSTRUCCIONES:
# 
# 1. Para agregar un nuevo proveedor externo que consuma nuestras APIs:
#    - Genera una API key: node -e "console.log('sk_' + require('crypto').randomBytes(32).toString('hex'))"
#    - Agrega: EXTERNAL_API_KEY_[NOMBRE_PROVEEDOR]=sk_clave_generada
#    - Reinicia el servidor
#    - Entrega la API key al proveedor
#
# 2. El proveedor debe usar la API key en sus requests:
#    Authorization: Bearer sk_clave_generada
#    o
#    X-API-Key: sk_clave_generada
#
# 3. Para más información consulta: API_AUTHENTICATION.md
# ==============================================================================
